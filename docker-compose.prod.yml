version: '3.0'

services:
  django:
    depends_on:
      - db
    environment:
      - PRIVATE_ACCOUNT_KEY=$PRIVATE_ACCOUNT_KEY
      - PROVIDER_URL=$PROVIDER_URL
      - CONTRACT_ADDRESS=$CONTRACT_ADDRESS
    command: /bin/sh -c '
      cp /tmp/make_db_setting.sh ./backend/make_db_setting.sh &&
      sh ./backend/make_db_setting.sh &&
      cd backend &&
      python manage.py makemigrations &&
      python manage.py migrate &&
      python manage.py loaddata ./accounts/fixtures/admin.json &&
      (celery -A ft_trans  worker -B -l info )&
      (cd frontend && npm install && npm run build) &&
      cd backend && daphne -e  ssl:8000:privateKey=/tmp/server.key:certKey=/tmp/server.crt ft_trans.asgi:application
      '

  db:
    container_name: 'db'
    build:
      context: ./docker/db
      dockerfile: Dockerfile
    networks:
      - db_net
    tty: true
    volumes:
      - ./db_volume/:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DJANGO_USER=$POSTGRES_DJANGO_USER
      - POSTGRES_DJANGO_PASSWORD=$POSTGRES_DJANGO_PASSWORD
      - POSTGRES_DJANGO_DB_NAME=$POSTGRES_DJANGO_DB_NAME
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 3s
      timeout: 1s
      retries: 5

  eth:
    environment:
      - PRIVATE_ACCOUNT_KEY=$PRIVATE_ACCOUNT_KEY
      - PROVIDER_URL=$PROVIDER_URL
      - CONTRACT_ADDRESS=$CONTRACT_ADDRESS
    command: /bin/sh -c "npx hardhat compile && tail -f /dev/null"
