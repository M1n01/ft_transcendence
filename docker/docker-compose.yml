version: "3"
networks:
  django_net:
    name: django_net
    driver: bridge
    ipam:
      config:
        - subnet: 172.38.10.0/24
  db_net:
    name: db_net
    driver: bridge
    ipam:
      config:
        - subnet: 172.38.20.0/24
      #ipam:
      #config:
      #- subnet: 172.38.10.0/24
      #ipam:
      #config:
      #- subnet: 172.38.10.0/24
services:
  nginx:
    container_name: "nginx"
    build:
      context: ./nginx
      dockerfile: Dockerfile
    networks:
      django_net:
        ipv4_address: 172.38.10.10
    tty: true
    ports:
      - 8080:80
      - 443:443
    environment:
      - NGINX_HOST=localhost
      - NGINX_PORT=80
    volumes:
      - ../ft_trans/public/:/public/
    depends_on:
      - django
  db:
    container_name: "db"
    build:
      context: ./db
      dockerfile: Dockerfile
    networks:
      - db_net
    tty: true
    ports:
      - 5432:5432
    volumes:
      - ../db_volume/:/var/lib/postgresql/data
    depends_on:
      - django
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DJANGO_USER=django_user_test3
      - POSTGRES_DJANGO_PASSWORD=django
      - POSTGRES_DJANGO_DB_NAME=django_db_test3

  django:
    container_name: "django"
    build:
      context: ./django
      dockerfile: Dockerfile
    networks:
      - django_net
      - db_net
    tty: true
    # プロジェクトをバインドマウント
    volumes:
      - ../ft_trans/:/workspace
    ports:
      - 8000:8000
    env_file:
      - ./django/.env

    environment:
      - DJANGO_SECRET_KEY=django-insecure-)m4dn7&(w_%7aj#p-(+2zyf&staxh1_dfs1$=it06$4gxT3+pv
      - POSTGRES_DJANGO_USER=django_user_test3
      - POSTGRES_DJANGO_PASSWORD=django
      - POSTGRES_DJANGO_DB_NAME=django_db_test3


    command:
      /bin/sh -c '
      cp /tmp/server.key /workspace/ &&
      cp /tmp/server.crt /workspace/ &&
      cp  /tmp/make_db_setting.sh /workspace/make_db_setting.sh &&
      sh /workspace/make_db_setting.sh &&
      python manage.py collectstatic --noinput &&
      python manage.py migrate &&
      daphne -e  ssl:8000:privateKey=/workspace/server.key:certKey=/workspace/server.crt ft_trans.asgi:application
      '
  client:
    container_name: "client"
    image: python:3.10
    tty: true
